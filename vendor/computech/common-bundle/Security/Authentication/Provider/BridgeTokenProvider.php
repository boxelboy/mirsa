<?php
namespace Computech\Bundle\CommonBundle\Security\Authentication\Provider;

use Computech\Bundle\CommonBundle\Security\Authentication\Token\FileMakerBridgeToken;
use Doctrine\Bundle\DoctrineBundle\Registry;
use Symfony\Component\Security\Core\Authentication\Provider\AuthenticationProviderInterface;
use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;

/**
 * Authenticate a User using a unique token generated by FileMaker and passed via the request URI
 *
 * @author Jack Murdoch <jack@computech-it.co.uk>
 * @link   http://git.computech-it.co.uk/computech/CommonBundle
 */
class BridgeTokenProvider implements AuthenticationProviderInterface
{
    /**
     * @var \Symfony\Component\Security\Core\User\UserProviderInterface
     */
    private $userProvider;

    /**
     * @var \Doctrine\Bundle\DoctrineBundle\Registry
     */
    private $doctrine;

    /**
     * @param UserProviderInterface $userProvider
     * @param Registry              $doctrine
     */
    public function __construct(UserProviderInterface $userProvider, Registry $doctrine)
    {
        $this->userProvider = $userProvider;
        $this->doctrine = $doctrine;
    }

    /**
     * {@inheritDoc}
     */
    public function authenticate(TokenInterface $token)
    {
        $user = $this->userProvider->loadUserByUsername($token->getToken());

        $authenticatedToken = new FileMakerBridgeToken($user->getRoles());
        $authenticatedToken->setUser($user);

        if ($token->getClear()) {
            $user->setToken('');
        }

        $user->setLastLogin(new \DateTime());

        $this->doctrine->getManager()->flush();

        return $authenticatedToken;
    }

    /**
     * {@inheritDoc}
     */
    public function supports(TokenInterface $token)
    {
        return $token instanceof FileMakerBridgeToken;
    }
}
